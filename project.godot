; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "",
"class": "GitAPI",
"language": "NativeScript",
"path": "res://addons/godot-git-plugin/git_api.gdns"
}, {
"base": "Resource",
"class": "InventoryData",
"language": "GDScript",
"path": "res://addons/inventory_editor/model/InventoryData.gd"
}, {
"base": "EditorProperty",
"class": "InventoryInspectorEditorInventory",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryInspectorPluginEditorInventory.gd"
}, {
"base": "EditorProperty",
"class": "InventoryInspectorEditorItem",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryInspectorPluginEditorItem.gd"
}, {
"base": "EditorProperty",
"class": "InventoryInspectorEditorType",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryInspectorPluginEditorType.gd"
}, {
"base": "Resource",
"class": "InventoryInventories",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryManagerInventories.gd"
}, {
"base": "Resource",
"class": "InventoryInventory",
"language": "GDScript",
"path": "res://addons/inventory_editor/model/InventoryInventory.gd"
}, {
"base": "Resource",
"class": "InventoryItem",
"language": "GDScript",
"path": "res://addons/inventory_editor/model/InventoryItem.gd"
}, {
"base": "Reference",
"class": "InventoryManagerInventory",
"language": "GDScript",
"path": "res://commons/inventory/InventoryManagerInventory.gd"
}, {
"base": "Reference",
"class": "InventoryManagerItem",
"language": "GDScript",
"path": "res://commons/inventory/InventoryManagerItem.gd"
}, {
"base": "InventoryItem",
"class": "InventoryRecipe",
"language": "GDScript",
"path": "res://addons/inventory_editor/model/InventoryRecipe.gd"
}, {
"base": "Resource",
"class": "InventoryType",
"language": "GDScript",
"path": "res://addons/inventory_editor/model/InventoryType.gd"
}, {
"base": "Control",
"class": "InventoryUI",
"language": "GDScript",
"path": "res://addons/inventory_editor/ui/InventoryInventoryUI.gd"
}, {
"base": "Node2D",
"class": "Item2D",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryItem2D.gd"
}, {
"base": "Spatial",
"class": "Item3D",
"language": "GDScript",
"path": "res://addons/inventory_editor/InventoryItem3D.gd"
}, {
"base": "TextureRect",
"class": "ItemUI",
"language": "GDScript",
"path": "res://addons/inventory_editor/ui/InventoryItemUI.gd"
} ]
_global_script_class_icons={
"GitAPI": "",
"InventoryData": "",
"InventoryInspectorEditorInventory": "",
"InventoryInspectorEditorItem": "",
"InventoryInspectorEditorType": "",
"InventoryInventories": "",
"InventoryInventory": "",
"InventoryItem": "",
"InventoryManagerInventory": "",
"InventoryManagerItem": "",
"InventoryRecipe": "",
"InventoryType": "",
"InventoryUI": "",
"Item2D": "",
"Item3D": "",
"ItemUI": ""
}

[application]

config/name="Sandbox"
run/main_scene="res://Main.tscn"

[autoload]

Settings="*res://globals/Settings.gd"
InputSystem="*res://globals/InputSystem.gd"

[display]

window/size/width=640
window/size/height=480
window/size/borderless=true
window/size/test_width=1280
window/size/test_height=720
window/stretch/mode="2d"
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "res://addons/inventory_editor/plugin.cfg" )

[gdnative]

singletons=[ "res://addons/godot-git-plugin/git_api.gdnlib" ]

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": false,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}

[inventory_editor]

items_split_offset=379

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
